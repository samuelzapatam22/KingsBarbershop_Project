/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Lord Nigga
 */
public class frmMenuOperador extends javax.swing.JFrame {

    private int onlineO;

    public int getOnlineO() {
        return onlineO;
    }

    public void setOnlineO(int online) {
        this.onlineO = online;
    }

    /**
     * Creates new form frmMenuOperador
     */
    public frmMenuOperador() {
        initComponents();
        setSize(1050, 650); // Establecer el tama√±o fijo para el JFrame de ancho:1050, Alto: 650 
        setResizable(false); // Desactivar el redimensionamiento
        setLocationRelativeTo(null);// Centrar el JFrame en la pantalla

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jblIconOperad = new javax.swing.JLabel();
        btnReservas = new javax.swing.JButton();
        btnCitas = new javax.swing.JButton();
        btnBarberos = new javax.swing.JButton();
        jbtnCerrarSesionOp = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        panelOperador = new javax.swing.JTabbedPane();
        jpnReservas = new javax.swing.JPanel();
        txtNombreCliente = new javax.swing.JTextField();
        txtTelefCliente = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        cbxBarberos = new javax.swing.JComboBox<>();
        cbxServicios = new javax.swing.JComboBox<>();
        btnCancelarClient = new javax.swing.JButton();
        guardarCita = new javax.swing.JButton();
        jlbtitulo_Reservas = new javax.swing.JLabel();
        jblsubtIdCliente = new javax.swing.JLabel();
        jblsubtNombCliente = new javax.swing.JLabel();
        jblsubtTelef = new javax.swing.JLabel();
        jblsubtBarbero = new javax.swing.JLabel();
        jblsubtServicio = new javax.swing.JLabel();
        iconCorona = new javax.swing.JLabel();
        txtTelefCliente1 = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        jblsubtBarbero1 = new javax.swing.JLabel();
        jblsubtBarbero2 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();
        jpnCitas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaReservas = new javax.swing.JTextArea();
        fondo2 = new javax.swing.JLabel();
        jpnBarberos = new javax.swing.JPanel();
        txtNombreBarber = new javax.swing.JTextField();
        txtTelefBarbero = new javax.swing.JTextField();
        jblsubtIdBarbero = new javax.swing.JLabel();
        txtIdBarbero = new javax.swing.JTextField();
        jblsubtNomBarber = new javax.swing.JLabel();
        jblsubtTelefBarbero = new javax.swing.JLabel();
        iconCorona1 = new javax.swing.JLabel();
        btnElimnarBarbero = new javax.swing.JButton();
        btnCancelarBarbero = new javax.swing.JButton();
        btnGuardaraBarbero = new javax.swing.JButton();
        jlbtitulo_Reservas1 = new javax.swing.JLabel();
        fondo1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(204, 102, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jblIconOperad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/Opera.png"))); // NOI18N
        jPanel5.add(jblIconOperad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 130, 140));

        btnReservas.setBackground(new java.awt.Color(204, 204, 204));
        btnReservas.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnReservas.setText("Cita");
        btnReservas.setBorder(null);
        btnReservas.setPreferredSize(new java.awt.Dimension(140, 40));
        btnReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservasActionPerformed(evt);
            }
        });
        jPanel5.add(btnReservas, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 150, 40));

        btnCitas.setBackground(new java.awt.Color(204, 204, 204));
        btnCitas.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnCitas.setText("Reservas");
        btnCitas.setBorder(null);
        btnCitas.setPreferredSize(new java.awt.Dimension(140, 40));
        btnCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCitasActionPerformed(evt);
            }
        });
        jPanel5.add(btnCitas, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 150, 40));

        btnBarberos.setBackground(new java.awt.Color(204, 204, 204));
        btnBarberos.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnBarberos.setText("Barberos");
        btnBarberos.setBorder(null);
        btnBarberos.setPreferredSize(new java.awt.Dimension(140, 40));
        btnBarberos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarberosActionPerformed(evt);
            }
        });
        jPanel5.add(btnBarberos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 150, 40));

        jbtnCerrarSesionOp.setBackground(new java.awt.Color(210, 187, 118));
        jbtnCerrarSesionOp.setFont(new java.awt.Font("Gadugi", 1, 15)); // NOI18N
        jbtnCerrarSesionOp.setForeground(new java.awt.Color(204, 0, 51));
        jbtnCerrarSesionOp.setText("Cerrar Sesion");
        jbtnCerrarSesionOp.setBorder(null);
        jbtnCerrarSesionOp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnCerrarSesionOp.setPreferredSize(new java.awt.Dimension(116, 26));
        jbtnCerrarSesionOp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCerrarSesionOpActionPerformed(evt);
            }
        });
        jPanel5.add(jbtnCerrarSesionOp, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 560, 120, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/fonddoMenuOpe.png"))); // NOI18N
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, 0, 490, 660));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 650));

        panelOperador.setBackground(new java.awt.Color(255, 255, 255));
        panelOperador.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(170, 151, 98)));

        jpnReservas.setBackground(new java.awt.Color(204, 204, 204));
        jpnReservas.setToolTipText("");
        jpnReservas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombreCliente.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txtNombreCliente.setToolTipText("");
        jpnReservas.add(txtNombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 185, 332, 35));

        txtTelefCliente.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txtTelefCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefClienteActionPerformed(evt);
            }
        });
        jpnReservas.add(txtTelefCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 235, 35));

        txtIdCliente.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txtIdCliente.setCaretColor(new java.awt.Color(255, 255, 255));
        jpnReservas.add(txtIdCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 185, 235, 35));

        cbxBarberos.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        cbxBarberos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "seleccione barbero..." }));
        cbxBarberos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxBarberosActionPerformed(evt);
            }
        });
        jpnReservas.add(cbxBarberos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 332, 35));

        cbxServicios.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        cbxServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "seleccione servicio..." }));
        cbxServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxServiciosActionPerformed(evt);
            }
        });
        jpnReservas.add(cbxServicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, 230, 35));

        btnCancelarClient.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelarClient.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnCancelarClient.setForeground(new java.awt.Color(210, 187, 118));
        btnCancelarClient.setText("Cancelar");
        btnCancelarClient.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 0, 51), new java.awt.Color(204, 0, 51)));
        btnCancelarClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarClientActionPerformed(evt);
            }
        });
        jpnReservas.add(btnCancelarClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 560, 150, 40));

        guardarCita.setBackground(new java.awt.Color(210, 187, 118));
        guardarCita.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        guardarCita.setText("Guardar");
        guardarCita.setToolTipText("");
        guardarCita.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 255, 0), java.awt.Color.green));
        guardarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarCitaActionPerformed(evt);
            }
        });
        jpnReservas.add(guardarCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 560, 150, 40));

        jlbtitulo_Reservas.setBackground(new java.awt.Color(102, 102, 102));
        jlbtitulo_Reservas.setFont(new java.awt.Font("King Slayer", 2, 48)); // NOI18N
        jlbtitulo_Reservas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbtitulo_Reservas.setText("Cita");
        jpnReservas.add(jlbtitulo_Reservas, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 280, 60));

        jblsubtIdCliente.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtIdCliente.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtIdCliente.setText("Cedula Cliente ");
        jpnReservas.add(jblsubtIdCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, -1));

        jblsubtNombCliente.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtNombCliente.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtNombCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jblsubtNombCliente.setText("Nombre");
        jpnReservas.add(jblsubtNombCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, -1));

        jblsubtTelef.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtTelef.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtTelef.setText("Telefono");
        jpnReservas.add(jblsubtTelef, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, -1, -1));

        jblsubtBarbero.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtBarbero.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtBarbero.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jblsubtBarbero.setText("Fecha (A-M-D)");
        jpnReservas.add(jblsubtBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, -1, -1));

        jblsubtServicio.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtServicio.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtServicio.setText("Servicio");
        jpnReservas.add(jblsubtServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 130, 30));

        iconCorona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconCorona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/Corona Negra.png"))); // NOI18N
        jpnReservas.add(iconCorona, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 110, 80));

        txtTelefCliente1.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txtTelefCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefCliente1ActionPerformed(evt);
            }
        });
        jpnReservas.add(txtTelefCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 235, 35));

        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });
        jpnReservas.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 390, 150, 35));
        jpnReservas.add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, 150, 35));

        jblsubtBarbero1.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtBarbero1.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtBarbero1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jblsubtBarbero1.setText("Barbero");
        jpnReservas.add(jblsubtBarbero1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, -1, -1));

        jblsubtBarbero2.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtBarbero2.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtBarbero2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jblsubtBarbero2.setText("Hora (H:M:S)");
        jpnReservas.add(jblsubtBarbero2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 360, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/fonddoMenuOpe2.png"))); // NOI18N
        jpnReservas.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-450, 0, 1260, 670));

        panelOperador.addTab("Reservas", jpnReservas);

        jpnCitas.setBackground(new java.awt.Color(102, 0, 204));
        jpnCitas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportBorder(new javax.swing.border.MatteBorder(null));

        jTextAreaReservas.setColumns(20);
        jTextAreaReservas.setRows(5);
        jTextAreaReservas.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane1.setViewportView(jTextAreaReservas);

        jpnCitas.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 790, 140));

        fondo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/fonddoMenuOpe2.png"))); // NOI18N
        jpnCitas.add(fondo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-450, 0, 1260, 670));

        panelOperador.addTab("Citas", jpnCitas);

        jpnBarberos.setBackground(new java.awt.Color(0, 204, 204));
        jpnBarberos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombreBarber.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txtNombreBarber.setToolTipText("");
        jpnBarberos.add(txtNombreBarber, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 332, 35));

        txtTelefBarbero.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txtTelefBarbero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefBarberoActionPerformed(evt);
            }
        });
        jpnBarberos.add(txtTelefBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 235, 35));

        jblsubtIdBarbero.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtIdBarbero.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtIdBarbero.setText("Cedula Barbero");
        jpnBarberos.add(jblsubtIdBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        txtIdBarbero.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        jpnBarberos.add(txtIdBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 235, 35));

        jblsubtNomBarber.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtNomBarber.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtNomBarber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jblsubtNomBarber.setText("Nombre");
        jpnBarberos.add(jblsubtNomBarber, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, -1, -1));

        jblsubtTelefBarbero.setFont(new java.awt.Font("Gadugi", 1, 19)); // NOI18N
        jblsubtTelefBarbero.setForeground(new java.awt.Color(255, 255, 255));
        jblsubtTelefBarbero.setText("Telefono");
        jpnBarberos.add(jblsubtTelefBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, -1, -1));

        iconCorona1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconCorona1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/Corona Negra.png"))); // NOI18N
        jpnBarberos.add(iconCorona1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 110, 80));

        btnElimnarBarbero.setBackground(new java.awt.Color(210, 187, 118));
        btnElimnarBarbero.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnElimnarBarbero.setText("Eliminar");
        btnElimnarBarbero.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0)));
        btnElimnarBarbero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimnarBarberoActionPerformed(evt);
            }
        });
        jpnBarberos.add(btnElimnarBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 560, 150, 40));

        btnCancelarBarbero.setBackground(new java.awt.Color(0, 0, 0));
        btnCancelarBarbero.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnCancelarBarbero.setForeground(new java.awt.Color(210, 187, 118));
        btnCancelarBarbero.setText("Cancelar");
        btnCancelarBarbero.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 0, 51), new java.awt.Color(204, 0, 51)));
        btnCancelarBarbero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarBarberoActionPerformed(evt);
            }
        });
        jpnBarberos.add(btnCancelarBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, 150, 40));

        btnGuardaraBarbero.setBackground(new java.awt.Color(210, 187, 118));
        btnGuardaraBarbero.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        btnGuardaraBarbero.setText("Guardar");
        btnGuardaraBarbero.setToolTipText("");
        btnGuardaraBarbero.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 255, 0), java.awt.Color.green));
        btnGuardaraBarbero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardaraBarberoActionPerformed(evt);
            }
        });
        jpnBarberos.add(btnGuardaraBarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 560, 150, 40));

        jlbtitulo_Reservas1.setBackground(new java.awt.Color(102, 102, 102));
        jlbtitulo_Reservas1.setFont(new java.awt.Font("King Slayer", 2, 48)); // NOI18N
        jlbtitulo_Reservas1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbtitulo_Reservas1.setText("GESTION BARBEROS");
        jpnBarberos.add(jlbtitulo_Reservas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 500, 60));

        fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imgs/fonddoMenuOpe2.png"))); // NOI18N
        jpnBarberos.add(fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-450, 0, 1260, 670));

        panelOperador.addTab("Barberos", jpnBarberos);

        getContentPane().add(panelOperador, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, -30, 800, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservasActionPerformed
        // TODO add your handling code here:
        panelOperador.setSelectedIndex(0);
    }//GEN-LAST:event_btnReservasActionPerformed

    private void btnCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCitasActionPerformed
        GestionDatos gDR = new GestionDatos();
         String jdbcUrl = "jdbc:postgresql://localhost:5432/kings_barbershop";
            String usuario = "postgres";
            String contrase√±a = "samuelzapatam22";

            // Intentar establecer la conexi√≥n
            try {
                Connection conexionR = DriverManager.getConnection(jdbcUrl, usuario, contrase√±a);
                System.out.println("¬°Conexi√≥n exitosa!");
                 String reservas = gDR.mostrarReservas(conexionR);
                 jTextAreaReservas.setText(reservas);
            } catch (SQLException ex) {
                Logger.getLogger(frmMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        panelOperador.setSelectedIndex(1);
        
    }//GEN-LAST:event_btnCitasActionPerformed

    private void btnBarberosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarberosActionPerformed
        // TODO add your handling code here:
        panelOperador.setSelectedIndex(2);
    }//GEN-LAST:event_btnBarberosActionPerformed

    private void jbtnCerrarSesionOpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCerrarSesionOpActionPerformed
        // Mostrar un cuadro de di√°logo de confirmaci√≥n personalizado
        String[] options = {"Cancelar", "Cerrar"};
        int choice = JOptionPane.showOptionDialog(this, "¬øSeguro que deseas cerrar sesi√≥n?", "Confirmaci√≥n", 0, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (choice == 1) {
            // Si elige "Cerrar", cierra la ventana actual
            this.dispose();
            // Abre la ventana de inicio de sesi√≥n (frmLogin)
            frmLogin loginForm = new frmLogin();
            loginForm.setVisible(true);
        }
    }//GEN-LAST:event_jbtnCerrarSesionOpActionPerformed

    private void txtTelefClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefClienteActionPerformed

    private void txtTelefBarberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefBarberoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefBarberoActionPerformed

    private void btnCancelarBarberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarBarberoActionPerformed
        // Establecer los campos en blanco
        txtIdBarbero.setText("");
        txtNombreBarber.setText("");
        txtTelefBarbero.setText("");

        JOptionPane.showMessageDialog(this, "Se cancelo registro Barbero", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnCancelarBarberoActionPerformed

    private void btnCancelarClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarClientActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(this, "¬øSeguro que deseas cancelar la reserva?", "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Establecer los campos en blanco
            txtIdCliente.setText("");
            txtNombreCliente.setText("");
            txtTelefCliente.setText("");
            cbxBarberos.setSelectedIndex(0); // Puedes establecer el √≠ndice predeterminado seg√∫n tus necesidades
            cbxServicios.setSelectedIndex(0); // Puedes establecer el √≠ndice predeterminado seg√∫n tus necesidades

            JOptionPane.showMessageDialog(this, "Se cancel√≥ la reserva", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelarClientActionPerformed

    private void cbxServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxServiciosActionPerformed
        String jdbcUrl = "jdbc:postgresql://localhost:5432/kings_barbershop";
        String usuario = "postgres";
        String contrase√±a = "samuelzapatam22";
        GestionDatos cbxS = new GestionDatos();
        boolean cargadas = true;
        // Intentar establecer la conexi√≥n
        try {
            Connection conexioncbxs = DriverManager.getConnection(jdbcUrl, usuario, contrase√±a);
            System.out.println("¬°Conexi√≥n exitosa!");
            if (cargadas) {
                ArrayList<String> serviciosItems = new ArrayList<>();
                serviciosItems = cbxS.obtenerDatosCbxS(conexioncbxs);
                for (String element : serviciosItems) {
                    cbxServicios.addItem(element);
                    cargadas = false;
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(frmMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cbxServiciosActionPerformed

    private void guardarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarCitaActionPerformed
        String idCliente = txtIdCliente.getText();
        String nombreCliente = txtNombreCliente.getText();
        String telefonoCliente = txtTelefCliente.getText();
        String barberoEscogido = (String) cbxBarberos.getSelectedItem();
        String servicioEscogido = (String) cbxServicios.getSelectedItem();
        String fechaCita = txtFecha.getText();
        String horaCita = txtHora.getText();

        GestionDatos gdClients = new GestionDatos();

        boolean cValido = true;
        // Verificar que los campos no est√©n vac√≠os
        if (idCliente.trim().isEmpty() || nombreCliente.trim().isEmpty() || telefonoCliente.trim().isEmpty() || barberoEscogido.trim().isEmpty() || servicioEscogido.trim().isEmpty() || fechaCita.trim().isEmpty() || horaCita.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben ser completados", "Error", JOptionPane.ERROR_MESSAGE);
            cValido = false;
            return; // Detener el proceso de guardado si alg√∫n campo est√° vac√≠o
        }

        // Validar longitud y contenido num√©rico si es necesario
        if (idCliente.length() < 8 || idCliente.length() > 15) {
            JOptionPane.showMessageDialog(this, "El ID del cliente debe tener entre 8 y 15 caracteres", "Error", JOptionPane.ERROR_MESSAGE);
            cValido = false;
            return; // Detener el proceso de guardado si la longitud del ID no est√° en el rango especificado
        }

        try {
            int id = Integer.parseInt(idCliente);
            // Puedes realizar m√°s validaciones espec√≠ficas aqu√≠ si es necesario
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del cliente debe ser un valor num√©rico", "Error", JOptionPane.ERROR_MESSAGE);
            cValido = false;
            return; // Detener el proceso de guardado si el ID no es num√©rico
        }

        if (telefonoCliente.length() != 10) {
            JOptionPane.showMessageDialog(this, "El tel√©fono del cliente debe tener exactamente 10 caracteres", "Error", JOptionPane.ERROR_MESSAGE);
            cValido = false;
            return; // Detener el proceso de guardado si la longitud del tel√©fono no es 10
        }

        try {
            Long.parseLong(telefonoCliente); // Intentar convertir a n√∫mero, no se usa el valor devuelto porque solo se necesita verificar si es num√©rico
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El tel√©fono del cliente debe ser un valor num√©rico", "Error", JOptionPane.ERROR_MESSAGE);
            cValido = false;
            return; // Detener el proceso de guardado si el tel√©fono no es num√©rico
        }

        // Si todas las validaciones pasan, puedes proceder con el proceso de guardado
        // agregar el c√≥digo para guardar la informaci√≥n en tu base de datos o hacer lo que sea necesario
        JOptionPane.showMessageDialog(this, "cliente guardado correctamente", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        if (cValido) {
            Cliente client = new Cliente();
            client.setNombre(nombreCliente);
            client.setId(idCliente);
            client.setTelefono(telefonoCliente);
            String jdbcUrl = "jdbc:postgresql://localhost:5432/kings_barbershop";
            String usuario = "postgres";
            String contrase√±a = "samuelzapatam22";

            // Intentar establecer la conexi√≥n
            try {
                Connection conexionC = DriverManager.getConnection(jdbcUrl, usuario, contrase√±a);
                System.out.println("¬°Conexi√≥n exitosa!");
                gdClients.insertarDatosClients(conexionC, nombreCliente, idCliente, telefonoCliente);
                int sB = gdClients.idSerialBarbero(conexionC, barberoEscogido);
                int sS = gdClients.idSerialServicio(conexionC, servicioEscogido);
                int sC = gdClients.idSerialCliente(conexionC, nombreCliente);
                String available = "True";
                float servicePrice = gdClients.totalFactura(conexionC, sS);

                
                gdClients.insertarDatosReservations(conexionC,sC,sB,sS,fechaCita,horaCita);
                 int sR = gdClients.idSerialReserva(conexionC, sS, sC);
                 gdClients.insertarDatosBills(conexionC,sR,fechaCita,horaCita,servicePrice);
            } catch (SQLException ex) {
                Logger.getLogger(frmMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(frmMenuOperador.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
        // Limpiar los campos despu√©s del registro
        txtIdCliente.setText("");
        txtNombreCliente.setText("");
        txtTelefCliente.setText("");
        txtFecha.setText("");
        txtHora.setText("");

    }//GEN-LAST:event_guardarCitaActionPerformed

    private void btnGuardaraBarberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardaraBarberoActionPerformed
        //Guardar barbero operador
        String idBarber = txtIdBarbero.getText();
        String nombreBarber = txtNombreBarber.getText();
        String telefonoBarber = txtTelefBarbero.getText();
        GestionDatos gdClients = new GestionDatos();

        boolean clValido = true;
        // Verificar que los campos no est√©n vac√≠os
        if (idBarber.trim().isEmpty() || nombreBarber.trim().isEmpty() || telefonoBarber.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben ser completados", "Error", JOptionPane.ERROR_MESSAGE);
            clValido = false;
            return; // Detener el proceso de guardado si alg√∫n campo est√° vac√≠o
        }

        // Validar longitud y contenido num√©rico si es necesario
        if (idBarber.length() < 8 || idBarber.length() > 15) {
            JOptionPane.showMessageDialog(this, "El ID del Barbero debe tener entre 8 y 15 caracteres", "Error", JOptionPane.ERROR_MESSAGE);
            clValido = false;
            return; // Detener el proceso de guardado si la longitud del ID no est√° en el rango especificado
        }

        try {
            int id = Integer.parseInt(idBarber);
            // Puedes realizar m√°s validaciones espec√≠ficas aqu√≠ si es necesario
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del Barbero debe ser un valor num√©rico", "Error", JOptionPane.ERROR_MESSAGE);
            clValido = false;
            return; // Detener el proceso de guardado si el ID no es num√©rico
        }

        if (telefonoBarber.length() != 10) {
            JOptionPane.showMessageDialog(this, "El tel√©fono del Barbero debe tener exactamente 10 caracteres", "Error", JOptionPane.ERROR_MESSAGE);
            clValido = false;
            return; // Detener el proceso de guardado si la longitud del tel√©fono no es 10
        }

        try {
            Long.parseLong(telefonoBarber); // Intentar convertir a n√∫mero, no se usa el valor devuelto porque solo se necesita verificar si es num√©rico
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El tel√©fono del Barbero debe ser un valor num√©rico", "Error", JOptionPane.ERROR_MESSAGE);
            clValido = false;
            return; // Detener el proceso de guardado si el tel√©fono no es num√©rico
        }

        // Si todas las validaciones pasan, puedes proceder con el proceso de guardado
        // agregar el c√≥digo para guardar la informaci√≥n en tu base de datos o hacer lo que sea necesario
        JOptionPane.showMessageDialog(this, "Barbero guardado correctamente", "√âxito", JOptionPane.INFORMATION_MESSAGE);
        if (clValido) {
            Barbero barb = new Barbero();
            barb.setNombre(nombreBarber);
            barb.setId(idBarber);
            barb.setTelefono(telefonoBarber);
            String jdbcUrl = "jdbc:postgresql://localhost:5432/kings_barbershop";
            String usuario = "postgres";
            String contrase√±a = "samuelzapatam22";

            // Intentar establecer la conexi√≥n
            try {
                Connection conexionB = DriverManager.getConnection(jdbcUrl, usuario, contrase√±a);
                System.out.println("¬°Conexi√≥n exitosa!");
                gdClients.insertarDatosBarbers(conexionB, nombreBarber, idBarber, telefonoBarber);
            } catch (SQLException ex) {
                Logger.getLogger(frmMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // Limpiar los campos despu√©s del registro
        txtIdBarbero.setText("");
        txtNombreBarber.setText("");
        txtTelefBarbero.setText("");

    }//GEN-LAST:event_btnGuardaraBarberoActionPerformed

    private void txtTelefCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefCliente1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefCliente1ActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void cbxBarberosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxBarberosActionPerformed
        String jdbcUrl = "jdbc:postgresql://localhost:5432/kings_barbershop";
        String usuario = "postgres";
        String contrase√±a = "samuelzapatam22";
        boolean cargados = true;
        GestionDatos cbx = new GestionDatos();

        // Intentar establecer la conexi√≥n
        try {
            Connection conexioncbxb = DriverManager.getConnection(jdbcUrl, usuario, contrase√±a);
            System.out.println("¬°Conexi√≥n exitosa!");
            if (cargados) {
                ArrayList<String> items = new ArrayList<>();
                items = cbx.obtenerDatosCbxB(conexioncbxb);
                for (String elemento : items) {
                    cbxBarberos.addItem(elemento);
                    cargados = false;
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(frmMenuAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cbxBarberosActionPerformed

    private void btnElimnarBarberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimnarBarberoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnElimnarBarberoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMenuOperador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMenuOperador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMenuOperador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMenuOperador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMenuOperador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBarberos;
    private javax.swing.JButton btnCancelarBarbero;
    private javax.swing.JButton btnCancelarClient;
    private javax.swing.JButton btnCitas;
    private javax.swing.JButton btnElimnarBarbero;
    private javax.swing.JButton btnGuardaraBarbero;
    private javax.swing.JButton btnReservas;
    private javax.swing.JComboBox<String> cbxBarberos;
    private javax.swing.JComboBox<String> cbxServicios;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel fondo1;
    private javax.swing.JLabel fondo2;
    private javax.swing.JButton guardarCita;
    private javax.swing.JLabel iconCorona;
    private javax.swing.JLabel iconCorona1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaReservas;
    private javax.swing.JLabel jblIconOperad;
    private javax.swing.JLabel jblsubtBarbero;
    private javax.swing.JLabel jblsubtBarbero1;
    private javax.swing.JLabel jblsubtBarbero2;
    private javax.swing.JLabel jblsubtIdBarbero;
    private javax.swing.JLabel jblsubtIdCliente;
    private javax.swing.JLabel jblsubtNomBarber;
    private javax.swing.JLabel jblsubtNombCliente;
    private javax.swing.JLabel jblsubtServicio;
    private javax.swing.JLabel jblsubtTelef;
    private javax.swing.JLabel jblsubtTelefBarbero;
    private javax.swing.JButton jbtnCerrarSesionOp;
    private javax.swing.JLabel jlbtitulo_Reservas;
    private javax.swing.JLabel jlbtitulo_Reservas1;
    private javax.swing.JPanel jpnBarberos;
    private javax.swing.JPanel jpnCitas;
    private javax.swing.JPanel jpnReservas;
    private javax.swing.JTabbedPane panelOperador;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtIdBarbero;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtNombreBarber;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtTelefBarbero;
    private javax.swing.JTextField txtTelefCliente;
    private javax.swing.JTextField txtTelefCliente1;
    // End of variables declaration//GEN-END:variables
}
